"""Initial set of tables

Revision ID: c84b26c56825
Revises: 8d8d70c226fa
Create Date: 2023-02-16 05:33:26.855047

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "c84b26c56825"
down_revision = "8d8d70c226fa"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "announcement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("label", name="uq_category_label"),
    )
    op.create_table(
        "club",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("code_regex", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "member",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first", sa.String(), nullable=True),
        sa.Column("middle", sa.String(), nullable=True),
        sa.Column("last", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "number",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("lost", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "age_group",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "paddler",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bcu", sa.Integer(), nullable=True),
        sa.Column("bcu_expiry", sa.Date(), nullable=True),
        sa.Column("division", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("first", sa.String(), nullable=True),
        sa.Column("middle", sa.String(), nullable=True),
        sa.Column("last", sa.String(), nullable=True),
        sa.Column("suffix", sa.String(), nullable=True),
        sa.Column("dob", sa.Date(), nullable=True),
        sa.Column("age_group_id", sa.Integer(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("emergency_name", sa.String(), nullable=True),
        sa.Column("emergency_phone", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["age_group_id"],
            ["age_group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_paddler_age_group_id"), "paddler", ["age_group_id"], unique=False
    )
    op.create_table(
        "series",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "time_trial",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("distance", sa.Numeric(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("pwd", sa.String(), nullable=True),
        sa.Column("authenticated", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "race",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("series_id", sa.Integer(), nullable=True),
        sa.Column("time_min_start", sa.String(), nullable=True),
        sa.Column("time_max_start", sa.String(), nullable=True),
        sa.Column("time_min_finish", sa.String(), nullable=True),
        sa.Column("time_max_finish", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "date", name="uq_race_name_date"),
    )
    op.create_index(op.f("ix_race_series_id"), "race", ["series_id"], unique=False)
    op.create_table(
        "team_type",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "team",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("team_type_id", sa.Integer(), nullable=False),
        sa.Column("series_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["team_type_id"],
            ["team_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "series_id", name="uq_team_name_series"),
    )
    op.create_index(op.f("ix_team_series_id"), "team", ["series_id"], unique=False)
    op.create_table(
        "time_trial_result",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("time_trial_id", sa.Integer(), nullable=True),
        sa.Column("member_id", sa.Integer(), nullable=True),
        sa.Column("time", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["member_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["time_trial_id"],
            ["time_trial.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_time_trial_result_member_id"),
        "time_trial_result",
        ["member_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_time_trial_result_time_trial_id"),
        "time_trial_result",
        ["time_trial_id"],
        unique=False,
    )
    op.create_table(
        "entry",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("race_id", sa.Integer(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column(
            "boat_type", sa.Enum("K1", "K2", "C", name="boattype"), nullable=True
        ),
        sa.Column("entry_number", sa.Integer(), nullable=True),
        sa.Column("series_id", sa.Integer(), nullable=True),
        sa.Column("time_start", sa.String(), nullable=True),
        sa.Column("time_finish", sa.String(), nullable=True),
        sa.Column("time_adjustment", sa.Integer(), nullable=True),
        sa.Column("registered", sa.Boolean(), nullable=False),
        sa.Column("retired", sa.Boolean(), nullable=False),
        sa.Column("scratched", sa.Boolean(), nullable=False),
        sa.Column("disqualified", sa.Boolean(), nullable=False),
        sa.Column("note", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["category.id"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["race.id"],
        ),
        sa.ForeignKeyConstraint(
            ["series_id"],
            ["series.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_entry_boat_type"), "entry", ["boat_type"], unique=False)
    op.create_index(
        op.f("ix_entry_category_id"), "entry", ["category_id"], unique=False
    )
    op.create_index(op.f("ix_entry_race_id"), "entry", ["race_id"], unique=False)
    op.create_index(op.f("ix_entry_series_id"), "entry", ["series_id"], unique=False)
    op.create_table(
        "crew",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("paddler_id", sa.Integer(), nullable=True),
        sa.Column("club_id", sa.String(length=3), nullable=True),
        sa.Column("entry_id", sa.Integer(), nullable=True),
        sa.Column("team_id", sa.Integer(), nullable=True),
        sa.Column("services", sa.Boolean(), server_default=sa.text("0"), nullable=True),
        sa.Column("due", sa.Numeric(), nullable=True),
        sa.Column("paid", sa.Numeric(), nullable=True),
        sa.ForeignKeyConstraint(
            ["club_id"],
            ["club.id"],
        ),
        sa.ForeignKeyConstraint(
            ["entry_id"],
            ["entry.id"],
        ),
        sa.ForeignKeyConstraint(
            ["paddler_id"],
            ["paddler.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_crew_club_id"), "crew", ["club_id"], unique=False)
    op.create_index(op.f("ix_crew_entry_id"), "crew", ["entry_id"], unique=False)
    op.create_index(op.f("ix_crew_paddler_id"), "crew", ["paddler_id"], unique=False)
    op.create_index(op.f("ix_crew_team_id"), "crew", ["team_id"], unique=False)
    op.create_table(
        "number_entry",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number_id", sa.Integer(), nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["entry_id"],
            ["entry.id"],
        ),
        sa.ForeignKeyConstraint(
            ["number_id"],
            ["number.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("number_entry")
    op.drop_index(op.f("ix_crew_team_id"), table_name="crew")
    op.drop_index(op.f("ix_crew_paddler_id"), table_name="crew")
    op.drop_index(op.f("ix_crew_entry_id"), table_name="crew")
    op.drop_index(op.f("ix_crew_club_id"), table_name="crew")
    op.drop_table("crew")
    op.drop_index(op.f("ix_entry_series_id"), table_name="entry")
    op.drop_index(op.f("ix_entry_race_id"), table_name="entry")
    op.drop_index(op.f("ix_entry_category_id"), table_name="entry")
    op.drop_index(op.f("ix_entry_boat_type"), table_name="entry")
    op.drop_table("entry")
    op.drop_index(
        op.f("ix_time_trial_result_time_trial_id"), table_name="time_trial_result"
    )
    op.drop_index(
        op.f("ix_time_trial_result_member_id"), table_name="time_trial_result"
    )
    op.drop_table("time_trial_result")
    op.drop_index(op.f("ix_team_series_id"), table_name="team")
    op.drop_table("team")
    op.drop_table("team_type")
    op.drop_index(op.f("ix_race_series_id"), table_name="race")
    op.drop_table("race")
    op.drop_table("user")
    op.drop_table("time_trial")
    op.drop_table("series")
    op.drop_constraint(None, "paddler", type_="foreignkey")
    op.drop_index(op.f("ix_paddler_age_group_id"), table_name="paddler")
    op.drop_column("paddler", "age_group_id")
    op.drop_table("age_group")
    op.drop_table("paddler")
    op.drop_table("number")
    op.drop_table("member")
    op.drop_table("club")
    op.drop_table("category")
    op.drop_table("announcement")
    # ### end Alembic commands ###
