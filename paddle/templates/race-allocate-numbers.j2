{% extends "base.j2" %}

{% block title %}Allocate Race Numbers{% endblock %}

{% block styles %}
{% include 'common/datatables-css.j2' %}
{% endblock %}

{% block content %}
<h1>Allocate Race Numbers</h1>

<form method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-sm-8">
            <table id="races" class="table table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th class="text-center">Category</th>
                        <th class="text-center">Entries</th>
                        <th class="text-center">Numbers</th>
                        <th class="text-center">Min</th>
                        <th class="text-center">Max</th>
                        <th class="text-center">Missing</th>
                        <th class="text-center">Excess</th>
                    </tr>
                </thead>
                <tbody>
                    {% for category in categories %}
                    <tr>
                        <td class="align-middle">{{ category.label }}</td>
                        <td class="align-middle text-end" data-index="{{ loop.index }}">{{ category.count }}</td>
                        <td class="align-middle">
                            <input type="number" class="form-control number"
                                value="{{ (((category.count/20)|round(0, 'ceil'))*20)|int }}"
                                name="category_id_{{ category.id }}">
                        </td>
                        <td class="align-middle text-end excess"></td>
                        <td class="align-middle text-end"></td>
                        <td class="align-middle text-end"></td>
                        <td class="align-middle text-end"></td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        <div class="col-sm-4">
            <div class="d-grid">
                <p>Total numbers allocated: <span id="total"></span></p>
                <button type="submit" class="btn btn-primary">Allocate Numbers</button>
            </div>
        </div>
    </div>
</form>
{% endblock %}

{% block scripts %}
{% include 'common/jquery-javascript.j2' %}
<script type="text/javascript" class="init">
$(document).ready(function () {
    var calculateValues = function () {
        const missing = {{ missing }};
        console.log(missing);

        let counter = 0;
        let lost = 0;

        $(".number").each(function () {
            const parent = $(this).parent();
            // Index for this category (sequential, starting at 1).
            const index = parent.prev().attr("data-index");
            // Number of entries in this category.
            const count = parent.prev().text();
            // How many numbers are allocated to this category?
            const allocated = Number($(this).val());

            console.log(allocated);

            const min = (counter == 0 ? 1 : counter);
            const max = counter + allocated - 1;

            const gone = missing.filter(number => number <= max).length;

            // How many numbers are left over?
            var excess = allocated - count;
            // Special handling for first category.
            excess -= (index == 1 ? 1 : 0);
            // Deduct the missing numbers.
            excess -= (gone-lost);

            parent.next().text(min);
            parent.next().next().text(max);
            parent.next().next().next().text(gone - lost);
            parent.next().next().next().next().text(excess);

            // Highlight categories that don't have enough numbers!
            //
            if (excess < 5 || excess > 15) {
                parent.next().next().next().next().addClass("bg-danger");
            } else {
                parent.next().next().next().next().removeClass("bg-danger");
            }

            // Highlight categories that don't start on a "nice" number!
            //
            if (min % 5 !== 0 && min !== 1) {
                parent.next().addClass("bg-danger");
            } else {
                parent.next().removeClass("bg-danger");
            }

            lost = gone;

            counter = max + 1;
        });

        var total = 0;
        $(".number").each(function () {
            total += +$(this).val();
        });
        $("#total").text(total);
    };

    calculateValues();                          // Initialise.
    $(".number").change(calculateValues);       // Recalculate on change
});
</script>
{% endblock %}
