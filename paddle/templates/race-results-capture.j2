{% extends "base-fluid.j2" %}

{% block title %}Capture Race Results{% endblock %}

{% block styles %}
{% include 'common/datatables-css.j2' %}
{% endblock %}

{% block content %}

{#
Form workflow:

1. Type race number.
2. Press tab (field with paddler names will be populated and focus will shift to start time field).
3. If the start time is already populated then focus will shift to the finish time field, otherwise enter start time (or
leave blank).
4. Press tab (focus will advance to the finish time field).
5. Enter finish time (or leave blank).
6. Press tab (focus will shift to the Submit button).
7. Press Enter to submit.
8. Focus will shift back to the race number field. Repeat.

You can also press enter in either the start time or finish time field to submit the form.
#}

<h1>Capture Race Results</h1>

<form method="post" id="result-capture-form">
    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <label for="title" class="col-sm-4 col-form-label">Race Number</label>
                <div class="col-sm-8">
                    <input type="number" class="form-control" id="race_number" placeholder="Race Number" value="{{ race_number }}" autofocus>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <input type="text" class="form-control" id="paddlers" name="paddlers" placeholder="Paddlers" disabled
                    readonly tabindex="-1">
            </div>
        </div>
        <div class="col-md-6 mt-1">
            <div class="row">
                <label for="title" class="col-sm-4 mt-0 col-form-label">Entry</label>
                <div class="col-sm-8 mt-0">
                    <!-- This is displayed. -->
                    <input type="text" id="entry_id" class="form-control" disabled readonly>
                    <!-- This is submitted with form. -->
                    <input type="hidden" id="hidden_entry_id" name="entry_id">
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="row">
                <label for="start" class="col-sm-4 col-form-label">Start time</label>
                <div class="col-sm-8">
                    <input type="text" class="form-control time" id="time_start" name="time_start"
                        placeholder="HH:MM:SS">
                </div>
            </div>
            <div class="row">
                <label for="finish" class="col-sm-4 mt-1 col-form-label">Finish time</label>
                <div class="col-sm-8 mt-1">
                    <input type="text" class="form-control time" id="time_finish" name="time_finish"
                        placeholder="HH:MM:SS">
                </div>
            </div>
            <div class="row">
                <label class="col-sm-4 mt-1 col-form-label">Race time</label>
                <div class="col-sm-8 mt-1">
                    <input type="text" class="form-control time" id="time_race" disabled readonly>
                </div>
            </div>
            <div class="row">
                <label for="finish" class="col-sm-4 mt-1 col-form-label">Adjustment</label>
                <div class="col-sm-8 mt-1">
                    <input type="number" class="form-control" id="time_adjustment" name="time_adjustment"
                        placeholder="Number of seconds to be added to time.">
                </div>
            </div>
            <div class="row mb-2">
                <label for="finish" class="col-sm-4 mt-1 col-form-label">Note</label>
                <div class="col-sm-8 mt-1">
                    <textarea class="form-control" id="note" name="note" rows="3"></textarea>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
        <div class="col">
            <div class="row mt-2">
                <div class="col-md-4">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="1" tabindex="-1" id="scratched"
                            name="scratched">
                        <label class="form-check-label" for="scratched">Scratched</label>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="1" tabindex="-1" id="retired"
                            name="retired">
                        <label class="form-check-label" for="retired">Retired</label>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="1" tabindex="-1" id="disqualified"
                            name="disqualified">
                        <label class="form-check-label" for="disqualified">Disqualified</label>
                    </div>
                </div>
            </div>
        </div>
        <button type="submit" hidden id="submit">Submit</button>
    </div>

<div class="mt-5 text-muted">
    <p>This form is designed for rapid entry of results. Using the form:</p>
    <ul>
        <li>Specify a race number.</li>
        <li>Hit the <kbd>Tab</kbd> key to cycle through input elements.</li>
        <li>Hit the <kbd>Enter</kbd> key to submit.</li>
    </ul>
</div>

<div class="mt-3 text-muted">
    <p>üö® Reasons that times might be invalid:</p>
    <ul>
        <li>The hours (0-24), minutes (0-59) or seconds (0-59) might not fall in valid range.</li>
        <li>The start time might fall outside of the valid start window ({{ race.time_min_start }}-{{ race.time_max_start }}).</li>
        <li>The finish time might fall outside of the valid finish window ({{ race.time_min_finish }}-{{ race.time_max_finish }}).</li>
    </ul>
</div>
<div class="form-check mt-2 mb-2 text-muted">
    <input class="form-check-input" type="checkbox" value="1" tabindex="-1" id="override"
        name="override">
    <label class="form-check-label" for="override">‚ö†Ô∏è Override (submit despite failing validation checks then check the following box).</label>
</div>
</form>

{% endblock %}

{% block sidebar %}
{% include 'sidebar-race-results-capture.j2' %}
{% endblock %}

{% block scripts %}
{% include 'common/jquery-javascript.j2' %}
{% include 'common/datatables-javascript.j2' %}
<script type="text/javascript" class="init">
    $(document).ready(function () {
        // Flashed messages disappear after a short delay.
        setTimeout(function () {
            $('.alert').fadeOut('slow');
        }, 3000);

        // Populate the Paddler(s) field based on chosen race number.
        var select_race_number = function () {
            if ($(this).val() === "") {
                console.log("No race number specified.");
                $('#paddlers').val("");
                $('#entry_id').removeAttr("value");
                $('#time_start').val("");
                $('#time_finish').val("");
                $('#time_race').val("");
            } else {
                $.ajax({
                    url: "/api/get-entry",
                    type: "post",
                    data: { race_id: {{ race.id }}, race_number: $(this).val()
        },
            success: function(response) {
                if (response["scratched"] || response["disqualified"] || response["retired"]) {
            $('#time_start').prop('disabled', true);
            $('#time_finish').prop('disabled', true);
            $('#time_adjustment').prop('disabled', true);
        } else {
            $('#time_start').prop('disabled', false);
            $('#time_finish').prop('disabled', false);
            $('#time_adjustment').prop('disabled', false);
            $('#note').prop('disabled', false);
        }
        $("#paddlers").removeClass("bg-danger");
        $('#scratched').prop('disabled', false);
        $('#retired').prop('disabled', false);
        $('#disqualified').prop('disabled', false);
        $('#submit').prop('disabled', false);

        $('#paddlers').val(response["paddlers"]);
        $('#entry_id').val(response["entry_id"]);
        $('#time_start').val(response["time_start"]);
        $('#time_finish').val(response["time_finish"]);
        $('#time_race').val("");
        $('#time_adjustment').val(response["time_adjustment"]);
        $("#scratched").prop("checked", response["scratched"]);
        $("#retired").prop("checked", response["retired"]);
        $("#disqualified").prop("checked", response["disqualified"]);
        $('#note').val(response["note"]);
        if (response["time_start"] != null) {
            $('#time_finish').focus();
            if (response["time_finish"] != null) {
                $('#submit').focus();
            }
        }
    },
        error: function (jqXHR, textStatus) {
            $('#paddlers').val("Race number not found!");
            $("#paddlers").addClass("bg-danger");

            $('#time_start').val("");
            $('#time_finish').val("");
            $('#time_race').val("");
            $('#time_adjustment').val("");
            $('#note').val("");

            $('#time_start').prop('disabled', true);
            $('#time_finish').prop('disabled', true);
            $('#scratched').prop('disabled', true);
            $('#retired').prop('disabled', true);
            $('#disqualified').prop('disabled', true);
            $('#submit').prop('disabled', true);
            $('#time_adjustment').prop('disabled', true);
            $('#note').prop('disabled', true);
            $('#race_number').focus();
        }
            });
        }
    };

    $("#race_number").focusout(select_race_number);
    $("#race_number").keypress(function (event) {
        if (event.key == "Enter") {
            // Don't submit form when press Enter on Race Number field.
            event.preventDefault();
            select_race_number.apply(this);
        }
    });

    function convertTimeToDate(time) {
        var parts = time.split(':');

        var hours = parseInt(parts[0], 10);
        var minutes = parseInt(parts[1], 10);
        var seconds = parseInt(parts[2], 10);

        return new Date(0, 0, 0, hours, minutes, seconds);
    }

    var update_race_time = function () {
        start = $("#time_start").val().split(":");
        finish = $("#time_finish").val().split(":");
        adjustment = $("#time_adjustment").val();

        if (start.length == 3 && finish.length == 3) {
            start = new Date(0, 0, 0, start[0], start[1], start[2]);
            finish = new Date(0, 0, 0, finish[0], finish[1], finish[2]);
            var diff = (finish.getTime() - start.getTime()) / 1000;

            start_min = convertTimeToDate("{{ race.time_min_start }}");
            start_max = convertTimeToDate("{{ race.time_max_start }}");
            finish_min = convertTimeToDate("{{ race.time_min_finish }}");
            finish_max = convertTimeToDate("{{ race.time_max_finish }}");

            // Only check validity window if the time itself is valid.
            //
            if (!$("#time_start").hasClass('is-invalid')) {
                if (start < start_min || start > start_max) {
                    $("#time_start").addClass('is-invalid');
                }
            }
            if (!$("#time_finish").hasClass('is-invalid')) {
                if (finish < finish_min || finish > finish_max) {
                    $("#time_finish").addClass('is-invalid');
                }
            }

            // Apply adjustment.
            //
            diff += Number(adjustment);

            if (diff <= 0) {
                $('#time_race').css('background-color', '{{ colour.BACKGROUND_WARNING }}');
                $('#submit').prop('disabled', true);
            } else {
                $('#time_race').css('background-color', '');
                $('#submit').prop('disabled', false);
            }

            var hours = Math.floor(diff / 60 / 60);
            diff -= hours * 60 * 60;
            var minutes = Math.floor(diff / 60);
            var seconds = diff - minutes * 60;

            $('#time_race').val(String(hours).padStart(2, '0') + ":" + String(minutes).padStart(2, '0') + ":" + String(seconds).padStart(2, '0'));
        } else {
            $('#time_race').val("");
        }
    };

    $('.time').focus(function () {
        $(this).select();
    });
    $('.time').focusout(function () {
        // Get time and remove colons.
        var time = $(this).val();
        if (time != "") {
            if (time.includes(":")) {
                console.log("Time ('" + time + "')  contains colons.")
                time = time.split(':').map(
                    item => (item.length < 2) ? '0' + item : item
                ).join('');
            } else {
                console.log("Time ('" + time + "') doesn't contain colons.")
                time = time.padEnd(6, '0');
            }
            // Insert colons.
            time = time.slice(0, 2) + ":" + time.slice(2, 4) + ":" + time.slice(4, 6);
            // Update time field.
            $(this).val(time);
        }

        // Validate time.
        var regex = /^([0-1]?[0-9]|2[0-3]):([0-5]?[0-9]):([0-5]?[0-9])$/;
        console.log(regex.test(time));

        if (!regex.test(time)) {
            $(this).addClass('is-invalid');
        } else {
            $(this).removeClass('is-invalid');
        }

        update_race_time();
    });
    $('#time_adjustment').focusout(function () {
        console.log("Parsing time adjustment.");
        update_race_time();
    });

    // - Disable form submission if any of the fields are invalid.
    // - Force form submission if the Override box is checked.
    $('#result-capture-form').on('submit', function(event) {
        if ($('.form-control.is-invalid').length > 0 && $('#override').is(':not(:checked)')) {
            event.preventDefault();
            alert('Please correct the errors before submitting.')
            return false; // Stop the event propagation
        }
        <!-- Copy entry ID across to field which will be submitted with form (not disabled). -->
        $('#hidden_entry_id').val($('#entry_id').val());
    });

    // Call the function on page load in case race number specified via parameter.
    select_race_number.call($("#race_number"));
});
</script>
{% endblock %}
